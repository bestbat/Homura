#!/usr/local/bin/bash
export NAME=Homura
VER=3.5
export ALH=500
export WTH=1000
GPU=$(glxinfo | grep "OpenGL vendor string")
OSN=$(uname)
export NDIR=/usr/home/$USER/.local/share/$NAME
export DDIR=$NDIR/Data
export ICO=$DDIR/$NAME.png
DATE=$(date)
WINEVER=$(wine --version)
COPYRIGHT=$(cat "/usr/local/share/licenses/homura-$VER/BSD2CLAUSE" | grep Copyright)
APPS=$(cat '/home/alexander/Downloads/homura-master/Data/Apps.hma')

if [[ $USER == *"root"* ]]; then
zenity --info --width=310 --window-icon=$ICO --title="$NAME $VER" --text="$NAME can not be executed as root."
exit
fi

if [ -z "$1" ]
then
CLI=0
fi

if [ ! -d "$NDIR" ]; then
if [[ $CLI == *"0"* ]]; then
mkdir -p $NDIR
zenity --info --width=310 --window-icon=$ICO --title="$NAME $VER - Welcome" --text="Welcome to $NAME. If you have a problem, suggestion, questions or similar, do not hesitate to open an issue on GitHub. Have Fun!"
SC=$(zenity --question --window-icon=$ICO --width 300 --title "$NAME $VER - One time question" --text "Do you want a shortcut of $NAME in your application menu?"; echo $?)
if [[ $SC == *"0"* ]]; then
if [ ! -d "/usr/home/$USER/.local/share/applications" ]; then
mkdir /usr/home/$USER/.local/share/applications
fi
echo "[Desktop Entry]
Comment=
Exec=bash /usr/local/bin/$NAME
Icon=$DDIR/$NAME.png
Categories=Game;
Name=$NAME
StartupNotify=false
Terminal=false
TerminalOptions=
Type=Application
" >> /usr/home/$USER/.local/share/applications/$NAME.desktop 
if [[ $SC == *"1"* ]]; then 
echo "Shortcut will be not created"
fi
if [[ $OSN != "FreeBSD" ]]; then
zenity --info --width=360 --window-icon=$ICO --title="$NAME $VER" --text="You are about to use $NAME on an unsupported system. Please be aware that unexpected errors may occur and that your bug reports can be marked as invaild."
fi
fi
else
echo -e "\e[40;38;5;82mYou must open $NAME first without a command. \e[30;48;5;82m\e[0m"
exit
fi
fi

if [ ! -d "$DDIR" ]; then
mkdir $NDIR/Data
fi

if [ ! -f "$ICO" ]; then
cd $DDIR
fetch https://vignette.wikia.nocookie.net/madoka/images/7/72/Homura_magical_outfit_1.png/revision/latest/top-crop/width/320/height/320?cb=20160821012353
mv 320?cb=20160821012353 $DDIR/$NAME.png
fi

if [[ $GPU == *"VMware, Inc."* ]]; then
zenity --info --width=420 --window-icon=$ICO --title="$NAME $VER" --text="$NAME have detected that you are using the fallback drivers, please check your gpu driver installation. If you should run $NAME in a virtual machine or you have enabled software rendering then you can ignore this message."
fi

echo -e "\e[32m$COPYRIGHT All rights reserved."
echo -e "\e[93mWelcome to $NAME $VER have fun!"
echo -e "\e[3;5;0;92mRunning on $OSN $(uname -r)"
echo -e "\e[3;5;0;36mWine Version: $WINEVER\e[30;48;5;82m\e[0m"
echo -e "\e[3;5;0;31mGPU Info OpenGL:\e[30;48;5;82m\e[0m" && glxinfo | grep OpenGL
echo -e "\e[3;5;0;31mGPU Info Vulkan:\e[30;48;5;82m\e[0m" && vulkaninfo | grep -m 1 "GPU id"

TODO=$(zenity --list --radiolist --window-icon=$ICO  --height=420 --width 300 --title="$NAME $VER" --text "What do you want to do?" --hide-header --column "$NAME" --column "Item" FALSE "Installation" FALSE "Launcher" FALSE "Uninstallation" FALSE "Winetricks" FALSE "Run a executable in prefix" FALSE "Update" FALSE "Applying a fix" FALSE "Open Homura folder" FALSE "Enable logging" FALSE "Other" FALSE "About" FALSE "Exit")


if [[ $TODO == *"Installation"* ]]; then
export INST=$(zenity --list --title="$NAME $VER - $TODO" --window-icon=$ICO --text "What do you want to install?" --height=$ALH --width=$WTH --column="Application" --column="Description" $APPS)
exec /home/alexander/Downloads/homura-master/Data/Setups.hma
fi

if [[ $TODO == *"Launcher"* ]]; then
export LNCH=$(zenity --list --title="$NAME $VER - $TODO" --window-icon=$ICO --text "What do you want to launch?" --height=$ALH --width=$WTH --column="Application" --column="Description" $APPS)
bash /home/alexander/Downloads/homura-master/Data/Checks.hma
exec /home/alexander/Downloads/homura-master/Data/Setups.hma
fi

if [[ $TODO == *"Uninstallation"* ]]; then
export UNST=$(zenity --list --title="$NAME $VER - $TODO" --window-icon=$ICO --text "What do you want to uninstall?" --height=$ALH --width=$WTH --column="Application" --column="Description" $APPS)
if [[ -z "$UNST" ]]; then
zenity --info --width=400 --window-icon=$ICO --title="$NAME $VER - $UNST" --text="Nothing was selected for uninstallation"
exec $NAME
else
bash /home/alexander/Downloads/homura-master/Data/Checks.hma
exec /home/alexander/Downloads/homura-master/Data/Setups.hma
fi
fi

if [[ $TODO == *"Winetricks"* ]]; then
export WTR=$(zenity --list --title="$NAME $VER - $TODO" --window-icon=$ICO --text "In what prefix do do you want to open winetricks?" --height=$ALH --width=$WTH --column="Application" --column="Description" $APPS)
exec /home/alexander/Downloads/homura-master/Data/Misc.hma
fi


if [[ $TODO == *"Run a executable in prefix"* ]]; then
export RAEP=$(zenity --list --title="$NAME $VER - $TODO" --window-icon=$ICO --text "In what prefix do do you want to open your executable?" --height=$ALH --width=$WTH --column="Application" --column="Description" $APPS)
exec /home/alexander/Downloads/homura-master/Data/Misc.hma
fi

if [[ $TODO == *"Update"* ]]; then
UPDE=$(zenity --list --radiolist --window-icon=$ICO --height=250 --width 250 --title="$NAME $VER - $TODO" --text "What do you want to update?" --hide-header --column "$NAME" --column "Item" FALSE "Teamspeak" FALSE "Growtopia" FALSE "Custom Prefix executable")

if [[ $UPDE == *"Teamspeak"* ]]; then
if [ ! -d "$NDIR/Programs/$UPDE" ]; then
zenity --info --width=400 --window-icon=$ICO --title="$NAME $VER - $UPDE" --text="You can not update something what is not installed :)"
else
WINEPREFIX=$NDIR/Programs/$UPDE wine "$NDIR/Programs/$UPDE/drive_c/Program Files/TeamSpeak 3 Client/update.exe"
kill ts3client_win32.exe
fi
fi

if [[ $UPDE == *"Growtopia"* ]]; then
if [ ! -d "$NDIR/Games/$UPDE" ]; then
zenity --info --width=400 --window-icon=$ICO --title="$NAME $VER - $UPDE" --text="You can not update something what is not installed :)"
else
cd $DDIR
curl -L -o "Growtopia-Installer.exe" "https://growtopiagame.com/Growtopia-Installer.exe" 2>&1 | stdbuf -oL tr '\r' '\n' | sed -u 's/^ *\([0-9][0-9]*\).*\( [0-9].*$\)/\1\\:\2/' | zenity --progress --text "Downloading $UPDE" --title "$NAME $VER $TODO $INST"
echo -e "\e[40;38;5;82mStarting installer\e[30;48;5;82m\e[0m"
WINEPREFIX=$NDIR/Games/$UPDE wine $DDIR/Growtopia-Installer.exe
rm $DDIR/Growtopia-Installer.exe
fi
fi

if [[ $UPDE == *"Custom Prefix executable"* ]]; then
echo $'\033]30;Update Custom Prefix executable\007'
cd "$NDIR/Custom Prefixes"
PREFIXNAME=$(zenity --file-selection --directory --title="Choose your prefix" --filename="/usr/home/$USER/.local/share/$NAME/Custom Prefixes/")
if [ -z "$PREFIXNAME" ]
then
zenity --info --width=310 --window-icon=$ICO --title="$NAME $VER - $TODO" --text="There was no custom prefix selected."
else
EXECUTABLE="$(zenity --file-selection --title="Choose your executable")"
ENV=$(zenity --title="Environment variable" --text "Do you need an environment variable for your executable? (for example DXVK_HUD=1) if not leave it blank." --entry --window-icon=$ICO --width=260)
SPM=$(zenity --title="Startparameter" --text "Do you need an startparameter for your executable? (for example -console) if not leave it blank." --entry --window-icon=$ICO --width=260) 
cd "$PREFIXNAME"
rm start.sh
echo "$ENV WINEPREFIX='$PREFIXNAME' wine '$EXECUTABLE' $SPM" >> start.sh
fi
fi
fi

if [[ $TODO == *"Applying a fix"* ]]; then
AAF=$(zenity --list --radiolist --window-icon=$ICO  --height=200 --width 350 --title="$NAME $VER" --text "What fix do you want to apply?" --hide-header --column "$NAME" --column "Item" FALSE "Fix of blackscreen in Anno 1404 (Steam)")

if [[ $AAF == *"Fix of blackscreen in Anno 1404 (Steam)"* ]]; then
if [ ! -d "/usr/home/$USER/.local/share/Homura/Games/Steam/drive_c/Program Files/Steam/steamapps/common/Anno 1404" ]; then
zenity --info --window-icon=$ICO --width=300 --title="$NAME $VER - $AAF" --text="Please install the game first."
else
cd "/usr/home/$USER/.local/share/Homura/Games/Steam/drive_c/Program Files/Steam/steamapps/common/Anno 1404"
curl -O https://raw.githubusercontent.com/the-homura-project/homura-database/master/Anno%201404/Engine.ini
fi
fi
fi

if [[ $TODO == *"Open Homura folder"* ]]; then
xdg-open $NDIR
fi

if [[ $TODO == *"Enable logging"* ]]; then
mkdir -p $NDIR/Logs
cd $NDIR/Logs
zenity --info --window-icon=$ICO --width=300 --title="$NAME $VER - About" --text="Logging for this session has been enabled, you will later find the log file in the log folder."
bash $NAME >> "$DATE.log" 2>&1
notify-send "The logging have been quit."
fi

if [[ $TODO == *"Other"* ]]; then
OTR=$(zenity --list --radiolist --window-icon=$ICO --height=250 --width 250 --title="$NAME $VER - $TODO" --text "What do you want to do?" --hide-header --column "$NAME" --column "Item" FALSE "Use software rendering" FALSE "Delete & reset everything" FALSE "Create a shortcut" FALSE "GitHub page")

if [[ $OTR == *"Use software rendering"* ]]; then
LIBGL_ALWAYS_SOFTWARE=1 $NAME
zenity --notification --window-icon=$ICO --text "You are using now hardware rendering again."
fi

if [[ $OTR == *"Delete & reset everything"* ]]; then
DRQ=$(zenity --question --window-icon=$ICO --width 300 --title "$NAME $VER - $OTR" --text "Do you really want to delete and reset everything? ／人◕ ‿‿ ◕人＼"; echo $?)
if [[ $DRQ == *"0"* ]]; then
$NAME Uninstall Steam
$NAME Uninstall Blizzard
$NAME Uninstall Origin
$NAME Uninstall Uplay
$NAME Uninstall Teamspeak
$NAME Uninstall "Clone Hero"
$NAME Uninstall "Drakensang Online"
$NAME Uninstall "Anarchy Online"
$NAME Uninstall itch
$NAME Uninstall "GOG Galaxy"
$NAME Uninstall "League of Legends"
$NAME Uninstall "Wargaming Game Center"
$NAME Uninstall Growtopia
$NAME Uninstall "Bethesda Launcher"
$NAME Uninstall Arc
$NAME Uninstall Discord
$NAME Uninstall "Left 4 Gore"
rm -r -d $NDIR
if [ -f "/usr/home/$USER/.local/share/applications/$NAME.desktop" ]; then
rm "/usr/home/$USER/.local/share/applications/$NAME.desktop"
else 
echo -e "\e[40;38;5;32mNo shortcut was created\e[30;48;5;82m\e[0m"
fi
zenity --info --window-icon=$ICO --width=200 --title="$NAME $VER - $OTR" --text="All files of $NAME have been deleted, we hope you had a good time."
exit
fi
fi

if [[ $OTR == *"Create a shortcut"* ]]; then
CS=$(zenity --list --radiolist --window-icon=$ICO --height=$ALH --width 300 --title="$NAME $VER - $OTR" --text "What shortcut do you want to create?" --hide-header --column "$NAME $VER" --column "Item" FALSE "Steam" FALSE "Blizzard" FALSE "Origin" FALSE "Uplay" FALSE "Teamspeak" FALSE "Clone Hero" FALSE "Drakensang Online" FALSE "Anarchy Online" FALSE "itch" FALSE "GOG Galaxy" FALSE "League of Legends" FALSE "Wargaming Game Center" FALSE "Growtopia" FALSE "Bethesda Launcher" FALSE "Arc" FALSE "Discord" FALSE "Left 4 Gore" FALSE "Custom Prefix")

CCKGPDIR=$NDIR/Games/$CS

if [[ $CCKGPDIR == *"$NDIR/Games/Teamspeak"* ]] || [[ $CCKGPDIR == *"$NDIR/Games/Discord"* ]] ; then
if [ ! -d "$NDIR/Programs/$CS" ]; then
if [[ $CLI == *"0"* ]]; then
zenity --info --width=200 --window-icon=$ICO --title="$NAME $VER - $LNCH" --text="$LNCH is not installed."
exec $NAME
fi
echo -e "\e[40;38;5;82m$LNCH is not installed.\e[30;48;5;82m\e[0m"
exit
fi
fi

if [[ $CCKGPDIR == *"$NDIR/Games/Left 4 Gore"* ]]; then
if [ ! -d "$NDIR/Extras/left4gore-2.3-windows" ]; then
zenity --info --width=200 --window-icon=$ICO --title="$NAME $VER - $OTR" --text="$CS is not installed."
exec $NAME
fi
fi

if [[ $CCKGPDIR == *"$NDIR/Games/Steam"* ]] || [[ $CCKGPDIR == *"$NDIR/Games/Blizzard"* ]] || [[ $CCKGPDIR == *"$NDIR/Games/Origin"* ]] || [[ $CCKGPDIR == *"$NDIR/Games/Uplay"* ]] || [[ $CCKGPDIR == *"$NDIR/Games/Clone Hero"* ]] || [[ $CCKGPDIR == *"$NDIR/Games/Drakensang Online"* ]] || [[ $CCKGPDIR == *"$NDIR/Games/itch"* ]] || [[ $CCKGPDIR == *"$NDIR/Games/Anarchy Online"* ]] || [[ $CCKGPDIR == *"$NDIR/Games/GOG Galaxy"* ]] || [[ $CCKGPDIR == *"$NDIR/Games/League of Legends"* ]] || [[ $CCKGPDIR == *"$NDIR/Games/Wargaming Game Center"* ]] || [[ $CCKGPDIR == *"$NDIR/Games/Wargaming Game Center"* ]] || [[ $CCKGPDIR == *"$NDIR/Games/Growtopia"* ]] || [[ $CCKGPDIR == *"$NDIR/Games/Bethesda Launcher"* ]] || [[ $CCKGPDIR == *"$NDIR/Games/Wargaming Game Center"* ]] || [[ $CCKGPDIR == *"$NDIR/Games/Arc"* ]] ; then
if [ ! -d "$NDIR/Games/$CS" ]; then
zenity --info --width=200 --window-icon=$ICO --title="$NAME $VER - $OTR" --text="$CS is not installed."
exec $NAME
fi
fi

if [ ! -d "/usr/home/$USER/.local/share/applications/Homura" ]; then
mkdir /usr/home/$USER/.local/share/applications/Homura
fi

if [[ $CS == *"Steam"* ]]; then
mkdir -p /usr/home/$USER/.local/share/applications/wine/Programs/$CS
if [ -f "/usr/home/$USER/.local/share/applications/wine/Programs/$CS/$CS.desktop" ]; then
rm /usr/home/$USER/.local/share/applications/wine/Programs/$CS/$CS.desktop
fi
echo "[Desktop Entry]
Name=$CS
Exec=$NAME Launch $CS
Type=Application
StartupNotify=true
Icon=BAC4_steam.0" >> /usr/home/$USER/.local/share/applications/wine/Programs/$CS/$CS.desktop
fi

if [[ $CS == *"Blizzard"* ]]; then
mkdir -p /usr/home/$USER/.local/share/applications/wine/Programs/Battle.net
if [ -f "/usr/home/$USER/.local/share/applications/wine/Programs/Battle.net/Battle.net.desktop" ]; then
rm /usr/home/$USER/.local/share/applications/wine/Programs/Battle.net/Battle.net.desktop
fi
echo "[Desktop Entry]
Name=$CS
Exec=$NAME Launch $CS
Type=Application
StartupNotify=true
Icon=65EF_Battle.net Launcher.0" >> /usr/home/$USER/.local/share/applications/wine/Programs/Battle.net/Battle.net.desktop
fi

if [[ $CS == *"Origin"* ]]; then
mkdir -p /usr/home/$USER/.local/share/applications/wine/Programs/$CS
if [ -f "/usr/home/$USER/.local/share/applications/wine/Programs/$CS/$CS.desktop" ]; then
rm /usr/home/$USER/.local/share/applications/wine/Programs/$CS/$CS.desktop
fi
echo "[Desktop Entry]
Name=$CS
Exec=$NAME Launch $CS
Type=Application
StartupNotify=true
Icon=9AD6_Origin.0" >> /usr/home/$USER/.local/share/applications/wine/Programs/$CS/$CS.desktop
fi

if [[ $CS == *"Uplay"* ]]; then
mkdir -p /usr/home/$USER/.local/share/applications/wine/Programs/Ubisoft/$CS
if [ -f "/usr/home/$USER/.local/share/applications/wine/Programs/Ubisoft/$CS/$CS.desktop" ]; then
rm /usr/home/$USER/.local/share/applications/wine/Programs/Ubisoft/$CS/$CS.desktop
fi
echo "[Desktop Entry]
Name=$CS
Exec=$NAME Launch $CS
Type=Application
StartupNotify=true
Icon=3B99_Uplay.0" >> /usr/home/$USER/.local/share/applications/wine/Programs/Ubisoft/$CS/$CS.desktop
fi

if [[ $CS == *"Teamspeak"* ]]; then
mkdir -p /usr/home/$USER/.local/share/applications/wine/Programs
if [ -f "/usr/home/$USER/.local/share/applications/wine/Programs/TeamSpeak 3 Client.desktop" ]; then
rm "/usr/home/$USER/.local/share/applications/wine/Programs/TeamSpeak 3 Client.desktop"
fi
echo "[Desktop Entry]
Name=$CS
Exec=$NAME Launch $CS
Type=Application
StartupNotify=true
Icon=0352_ts3client_win32.0" >> "/usr/home/$USER/.local/share/applications/wine/Programs/TeamSpeak 3 Client.desktop"
fi

if [[ $CS == *"Clone Hero"* ]]; then
cd $DDIR
curl -O https://clonehero.net/favicon.ico
if [ -f "/usr/home/$USER/.local/share/applications/$CS.desktop" ]; then
rm "/usr/home/$USER/.local/share/applications/$CS.desktop"
fi
echo "[Desktop Entry]
Name=$CS
Exec=$NAME Launch '$CS'
Type=Application
StartupNotify=true
Icon=$DDIR/favicon.ico" >> "/usr/home/$USER/.local/share/applications/$CS.desktop"
fi

if [[ $CS == *"Drakensang Online"* ]]; then
mkdir -p "/usr/home/$USER/.local/share/applications/wine/Programs/$CS"
if [ -f "/usr/home/$USER/.local/share/applications/wine/Programs/$CS/$CS.desktop" ]; then
rm "/usr/home/$USER/.local/share/applications/wine/Programs/$CS/$CS.desktop"
fi
echo "[Desktop Entry]
Name="$CS"
Exec=$NAME Launch '$CS'
Type=Application
StartupNotify=true
Icon=DA0A_icon" >> "/usr/home/$USER/.local/share/applications/wine/Programs/$CS/$CS.desktop"
fi

if [[ $CS == *"Anarchy Online"* ]]; then
zenity --info --width=350 --window-icon=$ICO --title="$NAME $VER - $CS" --text="We have told you to check/use the shortcut that the installer offer, sorry but no new shortcut for you!"
exec $NAME
fi

if [[ $CS == *"itch"* ]]; then
mkdir -p "/usr/home/$USER/.local/share/applications/wine/Programs/Itch Corp"
if [ -f "/usr/home/$USER/.local/share/applications/wine/Programs/Itch Corp/$CS.desktop" ]; then
rm "/usr/home/$USER/.local/share/applications/wine/Programs/Itch Corp/$CS.desktop"
fi
echo "[Desktop Entry]
Name=$CS
Exec=$NAME Launch $CS
Type=Application
StartupNotify=true
Icon=C840_itch-setup.0" >> "/usr/home/$USER/.local/share/applications/wine/Programs/Itch Corp/$CS.desktop"
fi

if [[ $CS == *"GOG Galaxy"* ]]; then
mkdir -p "/usr/home/$USER/.local/share/applications/wine/Programs/GOG.com/GOG Galaxy"
if [ -f "/usr/home/$USER/.local/share/applications/wine/Programs/GOG.com/GOG Galaxy/$CS.desktop" ]; then
rm "/usr/home/$USER/.local/share/applications/wine/Programs/GOG.com/GOG Galaxy/$CS.desktop"
fi
echo "[Desktop Entry]
Name="$CS"
Exec=$NAME Launch '$CS'
Type=Application
StartupNotify=true
Icon=F77E_GalaxyClient.0" >> "/usr/home/$USER/.local/share/applications/wine/Programs/GOG.com/GOG Galaxy/$CS.desktop"
fi

if [[ $CS == *"League of Legends"* ]]; then
cd $DDIR
curl -O http://2.bp.blogspot.com/-HqSOKIIV59A/U8WP4WFW28I/AAAAAAAAT5U/qTSiV9UgvUY/s1600/icon.png
if [ -f "/usr/home/$USER/.local/share/applications/$CS.desktop" ]; then
rm "/usr/home/$USER/.local/share/applications/$CS.desktop"
fi
echo "[Desktop Entry]
Name=$CS
Exec=$NAME Launch '$CS'
Type=Application
StartupNotify=true
Icon=$DDIR/icon.png" >> "/usr/home/$USER/.local/share/applications/$CS.desktop"
fi

if [[ $CS == *"Wargaming Game Center"* ]]; then
mkdir -p /usr/home/$USER/.local/share/applications/wine/Programs/Wargaming.net
if [ -f "/usr/home/$USER/.local/share/applications/wine/Programs/Wargaming.net/Wargaming.net Game Center.desktop" ]; then
rm "/usr/home/$USER/.local/share/applications/wine/Programs/Wargaming.net/Wargaming.net Game Center.desktop"
fi
echo "[Desktop Entry]
Name=$CS
Exec=$NAME Launch '$CS'
Type=Application
StartupNotify=true
Icon=3CE7_wgc.0" >> "/usr/home/$USER/.local/share/applications/wine/Programs/Wargaming.net/Wargaming.net Game Center.desktop"
fi

if [[ $CS == *"Growtopia"* ]]; then
mkdir -p /usr/home/$USER/.local/share/applications/wine/Programs/$CS
if [ -f "/usr/home/$USER/.local/share/applications/wine/Programs/$CS/$CS.desktop" ]; then
rm "/usr/home/$USER/.local/share/applications/wine/Programs/$CS/$CS.desktop"
fi
echo "[Desktop Entry]
Name=$CS
Exec=$NAME Launch $CS
Type=Application
StartupNotify=true
Icon=B09A_Growtopia.0" >> /usr/home/$USER/.local/share/applications/wine/Programs/$CS/$CS.desktop
fi

if [[ $CS == *"Bethesda Launcher"* ]]; then
mkdir -p "/usr/home/$USER/.local/share/applications/wine/Programs/Bethesda.net Launcher"
if [ -f "/usr/home/$USER/.local/share/applications/wine/Programs/Bethesda.net Launcher/Bethesda.net Launcher.desktop" ]; then
rm "/usr/home/$USER/.local/share/applications/wine/Programs/Bethesda.net Launcher/Bethesda.net Launcher.desktop"
fi
echo "[Desktop Entry]
Name="$CS"
Exec=$NAME Launch '$CS'
Type=Application
StartupNotify=true
Icon=5C20_BethesdaNetUpdater.0" >> "/usr/home/$USER/.local/share/applications/wine/Programs/Bethesda.net Launcher/Bethesda.net Launcher.desktop"
fi

if [[ $CS == *"Arc"* ]]; then
mkdir -p "/usr/home/$USER/.local/share/applications/wine/Programs/Perfect World Entertainment/$CS"
if [ -f "/usr/home/$USER/.local/share/applications/wine/Programs/Perfect World Entertainment/$CS/$CS.desktop" ]; then
rm /usr/home/$USER/.local/share/applications/wine/Programs/Perfect World Entertainment/$CS/$CS.desktop
fi
echo "[Desktop Entry]
Name=$CS
Exec=$NAME Launch $CS
Type=Application
StartupNotify=true
Icon=403B_ArcLauncher.0" >> "/usr/home/$USER/.local/share/applications/wine/Programs/Perfect World Entertainment/$CS/$CS.desktop"
fi

if [[ $CS == *"Discord"* ]]; then
if [ -f "/usr/home/$USER/.local/share/applications/$CS.desktop" ]; then
rm /usr/home/$USER/.local/share/applications/$CS.desktop
fi
echo "[Desktop Entry]
Name=$CS
Exec=$NAME Launch $CS
Type=Application
StartupNotify=true
Icon=NDIR/Programs/$CS/$CS/app.ico" >> /usr/home/$USER/.local/share/applications/$CS.desktop
fi

if [[ $CS == *"Left 4 Gore"* ]]; then
cd $DDIR
curl -O http://www.left4gore.com/favicon.ico
mv favicon.ico favicon_lf4g.ico
if [ -f "/usr/home/$USER/.local/share/applications/$CS.desktop" ]; then
rm /usr/home/$USER/.local/share/applications/$CS.desktop
fi
echo "[Desktop Entry]
Name="$CS"
Exec=$NAME Launch '$CS'
Type=Application
StartupNotify=true
Icon=$DDIR/favicon_lf4g.ico" >> "/usr/home/$USER/.local/share/applications/$CS.desktop"
fi

if [[ $CS == *"Custom Prefix"* ]]; then
if [ ! "$(ls -A "/usr/home/$USER/.local/share/$NAME/Custom Prefixes")" ]
then
zenity --info --width=310 --window-icon=$ICO --title="$NAME $VER - $LNCH" --text="There is no custom prefix installed"
else
cd "$NDIR/Custom Prefixes"
PREFIXNAME=$(zenity --file-selection --directory --title="Choose your prefix" --filename="/usr/home/$USER/.local/share/$NAME/Custom Prefixes/")
if [ -z "$PREFIXNAME" ]
then
zenity --info --width=310 --window-icon=$ICO --title="$NAME $VER - $TODO" --text="There was no custom prefix selected."
else
SCNAME=$(zenity --window-icon=$ICO --title="Create a custom prefix shortcut" --text "How your shortcut should be called?" --entry --width=260) 
SCICO="$(zenity --file-selection --title="Choose an icon")"
if [ -f "/usr/home/$USER/.local/share/applications/$SCNAME.desktop" ]; then
rm /usr/home/$USER/.local/share/applications/$SCNAME.desktop
fi
echo "[Desktop Entry]
Name="$SCNAME"
Exec=bash '$PREFIXNAME/start.sh'
Type=Application
StartupNotify=true
Icon=$SCICO" >> "/usr/home/$USER/.local/share/applications/$SCNAME.desktop"
fi
fi
fi
fi

if [[ $OTR == *"GitHub page"* ]]; then
xdg-open https://github.com/the-homura-project/homura
fi
fi

if [[ $TODO == *"About"* ]]; then
zenity --info --window-icon=$ICO --width=390 --title="$NAME $VER - About" --text="Inspired by Lutris.
$NAME is a launcher that makes it easy to run Windows games/launcher easily on FreeBSD by providing the required fixes and workarounds. 
The Windows emulation is provided by Wine.
$NAME is licensed under the BSD 2-Clause License.
$COPYRIGHT
All rights reserved."
fi

if [[ $TODO == *"Exit"* ]]; then
zenity --notification --window-icon=$ICO --text "Thanks for using $NAME and have a great day!"
exit
fi
zenity --notification --window-icon=$ICO --text "Task completed or application closed!"
if [[ $CLI == *"0"* ]]; then
exec $NAME
fi
