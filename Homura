#!/usr/local/bin/bash
export NAME=Homura
export VER=5.0
export ALH=500
export WTH=500
GPU=$(glxinfo | grep "OpenGL vendor string")
OSN=$(uname)
export NDIR=/usr/home/$USER/.local/share/$NAME
export DDIR=$NDIR/Data
export LDIR=$NDIR/Library
export ICO=$DDIR/$NAME.png
DATE=$(date)
WINEVER=$(wine --version)
COPYRIGHT=$(cat "/usr/local/share/licenses/homura-$VER/BSD2CLAUSE" | grep Copyright)

if [[ $USER == *"root"* ]]; then
zenity --info --width=310 --window-icon=$ICO --title="$NAME $VER" --text="$NAME can not be executed as root."
exit
fi

if [ ! -d "$NDIR" ]; then
mkdir -p $NDIR
zenity --info --width=310 --window-icon=$ICO --title="$NAME $VER - Welcome" --text="Welcome to $NAME. If you have a problem, suggestion, questions or similar, do not hesitate to open an issue on GitHub. Have Fun!"
if [[ $OSN != "FreeBSD" ]]; then
zenity --info --width=360 --window-icon=$ICO --title="$NAME $VER" --text="You are about to use $NAME on an unsupported system ($OSN). Please be aware that unexpected errors may occur and that your bug reports can be marked as invaild."
fi
SC=$(zenity --question --window-icon=$ICO --width 300 --title "$NAME $VER - One time question" --text "Do you want a shortcut of $NAME in your application menu?"; echo $?)
if [[ $SC == *"0"* ]]; then
if [ ! -d "/usr/home/$USER/.local/share/applications" ]; then
mkdir /usr/home/$USER/.local/share/applications
fi
echo "[Desktop Entry]
Comment=
Exec=bash /usr/local/bin/$NAME
Icon=$DDIR/$NAME.png
Categories=Game;
Name=$NAME
StartupNotify=false
Terminal=false
TerminalOptions=
Type=Application
" >> /usr/home/$USER/.local/share/applications/$NAME.desktop 
if [[ $SC == *"1"* ]]; then 
echo "Shortcut will be not created"
fi
fi
fi

if [ ! -d "$NDIR/Games" ]; then
mkdir $NDIR/Games
fi

if [ ! -d "$NDIR/Programs" ]; then
mkdir $NDIR/Programs
fi

if [ ! -d "$LDIR" ]; then
mkdir -p $LDIR
cd $LDIR
fetch https://github.com/the-homura-project/homura-library/archive/master.zip
unzip master.zip
mv $LDIR/homura-library-master/* $LDIR
cd $LDIR/
chmod +x *
rm -r -d $LDIR/homura-library-master
rm master.zip
rm LICENSE
fi


export APPLIST=$(cd $LDIR && ls | grep -v shortcuts | grep -v checks)
export APPEXISTCHECK=$(cd "$NDIR/Games" && ls && cd "$NDIR/Programs" && ls && cd "$NDIR" && ls | grep "Custom-Prefixes" )

if [ ! -d "$DDIR" ]; then
mkdir $NDIR/Data
fi

if [ ! -f "$ICO" ]; then
cd $DDIR
fetch http://alt.magzu.net/damn/dl/Homura.png
fi

if [[ $GPU == *"VMware, Inc."* ]]; then
zenity --info --width=420 --window-icon=$ICO --title="$NAME $VER" --text="$NAME have detected that you are using the fallback drivers, please check your gpu driver installation. If you should run $NAME in a virtual machine or you have enabled software rendering then you can ignore this message."
fi

if [[ $GPU == *"Mesa Project"* ]]; then
zenity --info --width=420 --window-icon=$ICO --title="$NAME $VER" --text="$NAME have detected that you are using the fallback drivers, please check your gpu driver installation. If you should run $NAME in a virtual machine or you have enabled software rendering then you can ignore this message."
fi

function download {
               zenity --notification --window-icon=$ICO --text "Downloading $INST $UPDE"
               fetch --retry $1
           }

function prefix-message {
               zenity --notification --window-icon=$ICO --text "Setup prefix"
           }

function installer-message {
               zenity --notification --window-icon=$ICO --text "Starting installation"
           }

function warn {
               zenity --warning --width=400 --window-icon=$ICO --title "$NAME $VER - $TODO" --text "$1"
           }
           
function info {
               zenity --info --width=400 --window-icon=$ICO --title "$NAME $VER - $TODO" --text "$1"
           }

export -f download
export -f prefix-message
export -f installer-message
export -f warn
export -f info

Install() {
export INST=$1
bash $LDIR/$1
}

Launch() {
export LNCH=$1
bash $LDIR/$1
}

Uninstall() {
export UNST=$1
bash $LDIR/$1
}

"$@"

echo -e "\e[32m$COPYRIGHT All rights reserved."
echo -e "\e[93mWelcome to $NAME $VER have fun!"
echo -e "\e[3;5;0;92mRunning on $OSN $(uname -r)"
echo -e "\e[3;5;0;36mWine Version: $WINEVER\e[30;48;5;82m\e[0m"
echo -e "\e[3;5;0;31mGPU Info OpenGL:\e[30;48;5;82m\e[0m" && glxinfo | grep OpenGL
echo -e "\e[3;5;0;31mGPU Info Vulkan:\e[30;48;5;82m\e[0m" && vulkaninfo | grep -m 1 "GPU id"

export TODO=$(zenity --list --radiolist --window-icon=$ICO  --height=450 --width 300 --title="$NAME $VER" --text "What do you want to do?" --hide-header --column "$NAME" --column "Item" FALSE "Installation" FALSE "Launcher" FALSE "Uninstallation" FALSE "Winetricks" FALSE "Run a executable in prefix" FALSE "Update" FALSE "Applying a fix" FALSE "Open Homura folder" FALSE "Enable logging" FALSE "Other" FALSE "About" FALSE "Exit")


if [[ $TODO == *"Installation"* ]]; then
export INST=$(zenity --list --title="$NAME $VER - $TODO" --window-icon=$ICO --text "What do you want to install?" --height=$ALH --width=$WTH --column="Application" $APPLIST)
if [[ -z "$INST" ]]; then
info "Nothing was selected for installation :/"
unset INST
exec $NAME
else
cd $DDIR
bash $LDIR/$INST
zenity --notification --window-icon=$ICO --text "Task completed!"
unset INST
fi
fi

if [[ $TODO == *"Launcher"* ]]; then
export LNCH=$(zenity --list --title="$NAME $VER - $TODO" --window-icon=$ICO --text "What do you want to launch?" --height=$ALH --width=$WTH --column="Application" $APPEXISTCHECK)
if [[ -z "$LNCH" ]]; then
info "Nothing was selected to launch :/"
unset LNCH
exec $NAME
else
bash $LDIR/$LNCH
zenity --notification --window-icon=$ICO --text "Task completed!"
unset LNCH
fi
fi

if [[ $TODO == *"Uninstallation"* ]]; then
export UNST=$(zenity --list --title="$NAME $VER - $TODO" --window-icon=$ICO --text "What do you want to uninstall?" --height=$ALH --width=$WTH --column="Application" $APPEXISTCHECK)
if [[ -z "$UNST" ]]; then
info "Nothing was selected for uninstallation :/"
unset UNST
exec $NAME
else
bash $LDIR/$UNST
zenity --notification --window-icon=$ICO --text "Task completed!"
unset UNST
fi
fi

if [[ $TODO == *"Winetricks"* ]]; then
cd $NDIR
PREFIX=$(zenity --file-selection --directory --title="Choose your prefix" --filename="/usr/home/$USER/.local/share/$NAME/")
WINEPREFIX=$PREFIX winetricks
fi

if [[ $TODO == *"Run a executable in prefix"* ]]; then
cd $NDIR
PREFIX=$(zenity --file-selection --directory --title="Choose your prefix" --filename="/usr/home/$USER/.local/share/$NAME/")
WINEPREFIX=$PREFIX
EXECUTABLE="$(zenity --file-selection --title="Choose your executable")" 
WINEPREFIX=$PREFIX wine $EXECUTABLE
fi

if [[ $TODO == *"Update"* ]]; then
export UPDE=$(zenity --list --title="$NAME $VER - $TODO" --window-icon=$ICO --text "What do you want to update?" --height=$ALH --width=$WTH --column="Application" $APPEXISTCHECK)
bash $LDIR/$UPDE
fi

if [[ $TODO == *"Applying a fix"* ]]; then
export AAF=$(zenity --list --radiolist --window-icon=$ICO  --height=200 --width 350 --title="$NAME $VER" --text "What fix do you want to apply?" --hide-header --column "$NAME" --column "Item" FALSE "Fix of blackscreen in Anno 1404 (Steam)")
bash $LDIR/fixes
fi

if [[ $TODO == *"Open Homura folder"* ]]; then
xdg-open $NDIR
fi

if [[ $TODO == *"Enable logging"* ]]; then
mkdir -p $NDIR/Logs
cd $NDIR/Logs
zenity --info --window-icon=$ICO --width=300 --title="$NAME $VER - About" --text="Logging for this session has been enabled, you will later find the log file in the log folder."
bash $NAME >> "$DATE.log" 2>&1
notify-send "The logging have been quit."
fi

if [[ $TODO == *"Other"* ]]; then
OTR=$(zenity --list --radiolist --window-icon=$ICO --height=250 --width 250 --title="$NAME $VER - $TODO" --text "What do you want to do?" --hide-header --column "$NAME" --column "Item" FALSE "Use software rendering" FALSE "Delete & reset everything" FALSE "Create a shortcut" FALSE "GitHub page" FALSE "Update library")

if [[ $OTR == *"Use software rendering"* ]]; then
LIBGL_ALWAYS_SOFTWARE=1 $NAME
zenity --notification --window-icon=$ICO --text "You are using now hardware rendering again."
fi

if [[ $OTR == *"Delete & reset everything"* ]]; then
DRQ=$(zenity --question --window-icon=$ICO --width 300 --title "$NAME $VER - $OTR" --text "Do you really want to delete and reset everything?"; echo $?)
if [[ $DRQ == *"0"* ]]; then
rm -r -d $NDIR
if [ -f "/usr/home/$USER/.local/share/applications/$NAME.desktop" ]; then
rm "/usr/home/$USER/.local/share/applications/$NAME.desktop"
else 
echo -e "\e[40;38;5;32mNo shortcut was created\e[30;48;5;82m\e[0m"
fi
if [ -d "/usr/home/$USER/.local/share/applications/$NAME" ]; then
rm -r -d "/usr/home/$USER/.local/share/applications/$NAME"
else 
echo -e "\e[40;38;5;32mNo shortcut from $NAME was created\e[30;48;5;82m\e[0m"
fi
zenity --info --window-icon=$ICO --width=200 --title="$NAME $VER - $OTR" --text="All files of $NAME have been deleted, we hope you had a good time."
exit
fi
fi
fi

if [[ $OTR == *"Create a shortcut"* ]]; then
export CS=$(zenity --list --radiolist --window-icon=$ICO --height=$ALH --width 300 --title="$NAME $VER - $OTR" --text "What shortcut do you want to create?" --hide-header --column "$NAME $VER - $OTR" --column "Application" $APPEXISTCHECK)
bash $LDIR/$CS
fi

if [[ $OTR == *"GitHub page"* ]]; then
xdg-open https://github.com/the-homura-project/homura
fi

if [[ $OTR == *"Update library"* ]]; then
rm -r -d $LDIR
fi

if [[ $TODO == *"About"* ]]; then
info "Inspired by Lutris.
$NAME is a launcher that makes it easy to run Windows games/launcher easily on FreeBSD by providing the required fixes and workarounds. 
The Windows emulation is provided by Wine.
$NAME is licensed under the BSD 2-Clause License.
$COPYRIGHT
All rights reserved."
fi

if [[ $TODO == *"Exit"* ]]; then
zenity --notification --window-icon=$ICO --text "Thanks for using $NAME and have a great day!"
exit
fi
exec $NAME

zenity --notification --window-icon=$ICO --text "Task completed!"
